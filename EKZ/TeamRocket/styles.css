@charset "UTF-8";
/* Указываем box sizing */
*, *::before, *::after {
  box-sizing: border-box;
}

/* Убираем внутренние отступы */
ul[class], ol[class] {
  padding: 0;
}

/* Убираем внешние отступы */
body, h1, h2, h3, h4, p, hr, ul[class], l[class], li, figure, figcaption, blockquote, dl, dd {
  margin: 0;
}

/* Выставляем основные настройки по-умолчанию для body */
body {
  height: 100vh;
  width: 100vw;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/
ul[class],
ol[class] {
  list-style: none;
}

/* Упрощаем работу с изображениями */
img {
  max-width: 100%;
  display: block;
}

/* Наследуем шрифты для инпутов и кнопок */
input, button, textarea, select {
  font: inherit;
}

::-webkit-scrollbar {
  width: 0.25rem;
  height: 0.25rem;
}
::-webkit-scrollbar-thumb {
  border: 0.25rem solid #000000;
  border-radius: 0.75rem;
}

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 100;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Thin.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 100;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-ThinItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 300;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Light.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 300;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-LightItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Regular.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 400;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Italic.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 500;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Medium.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 500;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-MediumItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 700;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Bold.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 700;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-BoldItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 900;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-Black.ttf") format("truetype");
}
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 900;
  src: local("Roboto"), url("assets/fonts/Roboto/Roboto-BlackItalic.ttf") format("truetype");
}
* {
  font-family: "Roboto";
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

hr {
  width: 100%;
}

a {
  text-decoration: none;
  color: #0052cc;
}
a:hover {
  text-decoration: underline;
}

img[src="assets/png/sortIco.png"], img[src="assets/png/plusIco.png"], img[src="assets/png/deleteIco.png"], img[src="assets/png/optionsIco.png"], img[src="assets/png/avatarPlaceholder.png"] {
  filter: invert(1);
}

button {
  border-radius: 0.25rem;
  padding: 0.25rem 0.5rem;
  cursor: pointer;
  transition: all 0.3s;
}
button:hover {
  box-shadow: 0 0 0 2px white;
}

input:not([type=radio]) {
  min-width: 16rem;
  border: none;
  outline: none;
  box-shadow: rgba(0, 0, 0, 0.3) 0 0 10px;
  border-radius: 0.25rem;
  padding: 0.25rem 0.5rem;
}

input[type=radio]:hover {
  cursor: pointer;
}
input[type=radio].hidden {
  display: none;
}

textarea {
  border-radius: 0.25rem;
  padding: 0.25rem 0.5rem;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  min-height: 100vh;
  overflow: hidden;
}

select {
  color: white;
}

svg {
  width: 1.825rem;
  height: 1.825rem;
  padding: 0.35rem;
  border-radius: 0.5rem;
  transition: all 0.3s linear;
  cursor: pointer;
}
svg path {
  fill: white;
}
svg.plusIco path, svg.filterIco path, svg.sortIco path, svg.crossIco path {
  stroke: white;
}
svg:hover {
  background-color: #1C1C1C;
}

body {
  width: 100vw;
  height: 100vh;
  overflow-y: auto;
  overflow-x: hidden;
}
body .authorizationOverlay {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(249, 248, 248);
}
body .authorizationOverlay .authorizationForm {
  margin: 4rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 3rem;
  background-color: white;
  padding: 3rem 2rem;
  padding: 3rem 2rem 2rem;
  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;
  border-radius: 1rem;
}
body .authorizationOverlay .authorizationForm .mainLogo {
  width: calc(min(100vh, 100vw) * 0.3);
  height: calc(min(100vh, 100vw) * 0.3);
}
body .authorizationOverlay .authorizationForm .functional {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 1rem;
}
body .authorizationOverlay .authorizationForm .functional form {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}
body .authorizationOverlay .authorizationForm .functional form button {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: none;
  font-size: 1.25em;
  font-weight: 500;
  filter: invert(1);
}
body .authorizationOverlay .authorizationForm .functional p {
  display: flex;
  justify-content: space-around;
  width: 100%;
  margin-top: -0.5rem;
  font-size: 0.875rem;
}
body header {
  height: 3.5rem;
  display: flex;
  justify-content: space-between;
  border-bottom: 1px solid #000000;
  border-color: rgba(0, 0, 0, 0.3);
  padding: 0.5rem 2rem;
  background-color: #2E2E2E;
}
body header .logo {
  display: flex;
  align-items: center;
  height: 100%;
  font-size: 2em;
  gap: 0.5rem;
  color: rgb(249, 248, 248);
}
body header .logo nav {
  height: 100%;
  margin-right: 1.5rem;
  border-radius: 0.5rem;
  transition: all 0.3s linear;
}
body header .logo nav svg {
  width: calc(2.5rem - 1px);
  height: 100%;
}
body header .logo nav svg path {
  fill: white;
}
body header .logo .mainLogo {
  width: calc(2.5rem - 1px);
  height: 100%;
  filter: invert(1);
}
body header .user {
  display: flex;
  align-items: center;
  padding: 0 0.25rem;
  border-radius: 1rem;
}
body header .user:hover {
  background-color: #1C1C1C;
}
body header .user .userName {
  padding: 0.25rem;
  color: rgb(249, 248, 248);
}
body header .user .userLogo {
  height: 100%;
  padding: 0.25rem;
  border-radius: 50%;
  transition: all 0.3s linear;
}
body header .user .userLogo img {
  width: calc(2.5rem - 1px - 0.5rem);
  height: 100%;
}
body header .user svg {
  width: calc(2.5rem - 1px);
  height: 100%;
  padding: 0;
  border-radius: 50%;
}
body header .user svg path {
  fill: #1C1C1C;
}
body header .user svg:hover {
  background-color: inherit;
}
body main {
  height: calc(100vh - 3.5rem);
  color: rgb(249, 248, 248);
}
body main .toolbar {
  display: flex;
  justify-content: space-between;
  width: 100%;
  height: 2rem;
  border-bottom: 1px solid #000000;
  border-color: rgba(0, 0, 0, 0.3);
  background-color: #2E2E2E;
  padding: 0.125rem 2rem;
  color: rgb(249, 248, 248);
}
body main .toolbar section {
  display: flex;
  column-gap: 0.5rem;
}
body main .toolbar section div {
  display: flex;
  align-items: center;
  column-gap: 0.25rem;
  padding: 0 0.5rem;
  border-radius: 0.5rem;
  transition: all 0.3s linear;
  cursor: pointer;
}
body main .toolbar section div svg {
  width: 1rem;
  height: 1rem;
  padding: 0;
  border-radius: 0;
}
body main .toolbar section div img {
  width: 1rem;
  height: 1rem;
}
body main .toolbar section div span {
  margin-top: 0.125rem;
}
body main .toolbar section div:hover {
  background-color: #1C1C1C;
  color: white;
}
body main .taskBoard {
  display: flex;
  column-gap: 3rem;
  height: calc(100vh - 3.5rem - 2rem);
  padding: 0 4rem;
  background-color: #2E2E2E;
}
body main .taskBoard .taskTableWrapper {
  flex-grow: 1;
  flex-basis: 20rem;
  min-width: 20rem;
}
body main .taskBoard .taskTableWrapper .tableHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
body main .taskBoard .taskTableWrapper .tableHeader h4 {
  margin: 0.5rem;
  padding: 0 0.25rem;
  font-size: 1.25rem;
  font-weight: 500;
  flex-grow: 1;
}
body main .taskBoard .taskTableWrapper .tableHeader div {
  display: flex;
  column-gap: 0.5rem;
}
body main .taskBoard .taskTableWrapper .tableHeader div svg {
  border-radius: 0.5rem;
  transition: all 0.3s linear;
}
body main .taskBoard .taskTableWrapper .tableHeader div svg path {
  fill: white;
}
body main .taskBoard .taskTableWrapper .tableHeader div svg:not(.deleteIco, .optionsIco, .assigneeAvatar) path {
  stroke: white;
}
body main .taskBoard .taskTableWrapper .tableHeader div svg:hover {
  background-color: #1C1C1C;
}
body main .taskBoard .taskTableWrapper .tableHeader div img {
  width: 1.875rem;
  height: 1.875rem;
  padding: 0.35rem;
  border-radius: 0.5rem;
  transition: all 0.3s linear;
}
body main .taskBoard .taskTableWrapper .tableHeader div img:hover {
  background-color: rgb(249, 248, 248);
}
body main .taskBoard .taskTableWrapper .taskTable {
  position: relative;
  height: calc(100vh - 3.5rem - 2rem - 1rem - 2.25rem - 1rem);
  background-color: #1C1C1C;
  border-radius: 1rem;
}
body main .taskBoard .taskTableWrapper .taskTable .border {
  position: absolute;
  width: 100%;
  height: 2rem;
  flex-shrink: 0;
}
body main .taskBoard .taskTableWrapper .taskTable .border.top {
  top: 0;
  margin-bottom: -1rem;
  border-radius: 1rem 1rem 0 0;
  background-image: linear-gradient(to bottom, #1C1C1C, transparent 100%);
}
body main .taskBoard .taskTableWrapper .taskTable .border.bottom {
  bottom: 0;
  margin-top: -1rem;
  border-radius: 0 0 1rem 1rem;
  background-image: linear-gradient(to top, #1C1C1C, transparent 100%);
}
body main .taskBoard .taskTableWrapper .taskTable .tasks {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  row-gap: 1rem;
  height: calc(100vh - 3.5rem - 2rem - 1rem - 2.25rem - 1rem);
  padding: 2rem 1rem;
  overflow-y: auto;
  overflow-x: hidden;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .innerContent {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm {
  display: flex;
  flex-direction: column;
  width: 100%;
  background-color: #2E2E2E;
  border-radius: 1rem;
  padding: 0.5rem 1rem;
  row-gap: 0.25rem;
  cursor: pointer;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm:hover {
  box-shadow: rgb(255, 255, 255) 0 0 3px;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm > * {
  width: 100%;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm div {
  display: flex;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus {
  justify-content: space-between;
  align-items: center;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus .mark {
  justify-content: center;
  align-items: center;
  height: 1.5625rem;
  padding: 0 0.5rem;
  border-radius: 0.5rem;
  color: #000000;
  font-size: 0.875rem;
  text-transform: lowercase;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus .mark.high {
  background-color: rgb(175, 61, 61);
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus .mark.medium {
  background-color: rgb(192, 190, 111);
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus .mark.low {
  background-color: rgb(139, 163, 112);
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus img {
  width: 1.875rem;
  height: 1.875rem;
  padding: 0.35rem;
  border-radius: 0.5rem;
  transition: all 0.3s linear;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskStatus img:hover {
  background-color: rgb(249, 248, 248);
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskAssignee {
  justify-content: flex-end;
}
body main .taskBoard .taskTableWrapper .taskTable .tasks .taskForm .taskAssignee .assignee svg {
  width: 2.28125rem;
  height: 2.28125rem;
  margin-left: 0.25rem;
  border-radius: 50%;
}
body .profileLayout {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
}
body .profileLayout * {
  color: rgb(249, 248, 248);
}
body .profileLayout .profile {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 1.5rem;
  padding: 2rem;
  border-radius: 1rem;
  box-shadow: rgb(255, 255, 255) 0 0 7px;
  background-color: #2E2E2E;
}
body .profileLayout .profile * {
  width: 100%;
}
body .profileLayout .profile svg.avatarPlaceholder {
  width: 5rem;
  height: 5rem;
  padding: 0;
  background-color: rgb(249, 248, 248);
  border-radius: 50%;
  background-repeat: no-repeat;
  background-position: 50%;
}
body .profileLayout .profile svg.avatarPlaceholder path {
  fill: #1C1C1C;
}
body .profileLayout .profile svg.avatarPlaceholder:hover {
  background-image: url(assets/svg/pictureIco.svg);
  background-color: rgba(249, 248, 248, 0.5);
}
body .profileLayout .profile svg.avatarPlaceholder:hover path {
  opacity: 0.5;
}
body .profileLayout .profile .crossIco {
  position: absolute;
  right: 1rem;
  top: 1rem;
  width: 1.75rem;
  height: 1.75rem;
  padding: 0.35rem;
  border-radius: 0.5rem;
}
body .profileLayout .profile .crossIco path {
  fill: rgb(249, 248, 248);
  stroke: rgb(249, 248, 248);
}
body .profileLayout .profile .crossIco:hover {
  background-color: #1C1C1C;
}
body .profileLayout .profile div {
  display: flex;
  flex-direction: column;
  row-gap: 0.5rem;
}
body .profileLayout .profile div span {
  font-size: 0.75rem;
  font-weight: 300;
}
body .profileLayout .profile div input {
  background-color: #2E2E2E;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  margin-bottom: 0.5rem;
}
body .profileLayout .profile div input[type=password] {
  margin-top: 1rem;
}
body .profileLayout .profile button {
  margin-top: 1rem;
  border: none;
  font-size: 1.25em;
  font-weight: 500;
  background-color: #1C1C1C;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
}
body .profileLayout .profile button:hover {
  box-shadow: 0 0 0 2px white;
}
body .taskCreationLayout {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
}
body .taskCreationLayout .task {
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
  padding: 2rem;
  border-radius: 1rem;
  box-shadow: rgb(255, 255, 255) 0 0 7px;
  background-color: #2E2E2E;
}
body .task {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
  width: 31rem;
  height: 100%;
  padding: 2rem;
  box-shadow: rgb(255, 255, 255) 0 0 7px;
  background-color: #2E2E2E;
  overflow: auto;
  z-index: 1;
}
body .task input, body .task textarea {
  color: rgb(249, 248, 248);
}
body .task .assignTo select {
  border: none;
  outline: none;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  border-radius: 0.25rem;
  padding: 0.25rem 0.5rem;
  background-color: #2E2E2E;
}
body .task .actionsBar {
  position: absolute;
  right: 1rem;
  top: 1rem;
  display: flex;
  flex-direction: row;
  width: fit-content;
  column-gap: 0.25rem;
}
body .task > div {
  display: flex;
  flex-direction: column;
  row-gap: 0.75rem;
  width: 100%;
}
body .task > div span {
  font-weight: 300;
  color: rgb(249, 248, 248);
}
body .task > div span.boardName {
  padding: 0.125rem 0.5rem;
  border-radius: 1rem;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
}
body .task > div input:not([type=radio]) {
  width: 27rem;
  background-color: #2E2E2E;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
}
body .task > div input:not([type=radio])[type=password] {
  margin-top: 1rem;
}
body .task > div textarea {
  resize: none;
  width: 27rem;
  height: 8rem;
  background-color: #2E2E2E;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  outline: none;
}
body .task > div.options {
  flex-direction: row;
  justify-content: space-between;
}
body .task > div.options div {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
body .task > div.options div span {
  text-align: center;
}
body .task > div.options div div {
  display: flex;
  flex-direction: row;
  column-gap: 1rem;
}
body .task > div.options div div svg {
  width: 2.28125rem;
  height: 2.28125rem;
  margin-bottom: -0.35rem;
}
body .task > div.options div select {
  min-width: 8rem;
  border: none;
  outline: none;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  border-radius: 1rem;
  padding: 0.25rem 0.5rem;
  background-color: #2E2E2E;
}
body .task > div.options .chooseImportance #importance input:checked + label {
  outline: 1px solid white;
  outline-offset: 2px;
}
body .task > div.options .chooseImportance #importance > * {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
}
body .task > div.options .chooseImportance #importance > *.high {
  background-color: rgb(175, 61, 61);
}
body .task > div.options .chooseImportance #importance > *.medium {
  background-color: rgb(192, 190, 111);
}
body .task > div.options .chooseImportance #importance > *.low {
  background-color: rgb(139, 163, 112);
}
body .task > div.options .chooseImportance #importance > *:hover {
  outline: 1px solid white;
  outline-offset: 2px;
  cursor: pointer;
}
body .task > div.options .chooseAccess label {
  border-radius: 0.5rem;
}
body .task > div.options .chooseAccess input:checked + label {
  background-color: #1C1C1C;
  cursor: pointer;
}
body .task .buttons {
  margin-top: 1rem;
  flex-direction: row;
  justify-content: space-between;
}
body .task button {
  border: none;
  padding: 0.25rem 1rem;
  border-radius: 1rem;
  background-color: #1C1C1C;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  color: rgb(249, 248, 248);
}
body .task button:hover {
  box-shadow: 0 0 0 2px white;
}
body .task .newComment {
  position: fixed;
  bottom: 1rem;
  z-index: 1;
}
body .task .newComment textarea {
  padding-right: 2.5rem;
}
body .task .newComment .postComment {
  position: absolute;
  right: 0.375rem;
  bottom: 0.75rem;
  width: 2rem;
  height: 2rem;
  padding: 0.5rem;
  border-radius: 0.5rem;
}
body .task .newComment .postComment:hover {
  background-color: #1C1C1C;
}
body .task .newComment > span {
  position: absolute;
  right: 0.375rem;
  top: 0.375rem;
  font-size: 0.75rem;
}
body .task .placeholder {
  order: 1;
  height: 8rem;
}
body .task .comment {
  position: relative;
  width: 27rem;
  padding: 0.5rem 1rem 1.5rem 3rem;
  border-radius: 0.25rem;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  color: rgb(249, 248, 248);
  font-weight: 300;
  font-size: 0.875rem;
}
body .task .comment .avatarPlaceholder {
  position: absolute;
  left: 0.5rem;
  top: 0.5rem;
  width: 2rem;
  height: 2rem;
  padding: 0;
  border-radius: 50%;
  background-color: rgb(249, 248, 248);
}
body .task .comment .avatarPlaceholder path {
  fill: #1C1C1C;
}
body .task .comment .avatarPlaceholder:hover {
  opacity: 0.5;
}
body .task .comment .date {
  position: absolute;
  right: 1rem;
  bottom: 0.25rem;
  font-size: 0.75rem;
}
body .filterLayout {
  position: absolute;
  top: 5.5rem;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 1rem;
  padding: 2rem;
  background-color: #2E2E2E;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
}
body .filterLayout * {
  color: rgb(249, 248, 248);
}
body .filterLayout .date {
  display: flex;
  align-items: center;
  column-gap: 1rem;
  padding: 0;
  width: 100%;
  box-shadow: none;
}
body .filterLayout .date input {
  min-width: 8rem;
  width: 6rem;
  flex-grow: 1;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  background-color: #2E2E2E;
}
body .filterLayout > * {
  border-radius: 0.5rem;
  box-shadow: rgb(255, 255, 255) 0 0 3px;
  background-color: #2E2E2E;
}
body .filterLayout input {
  width: 100%;
  text-align: center;
  border-radius: 0.5rem;
}
body .filterLayout button {
  width: 100%;
  border: none;
}
body .filterLayout > div {
  display: flex;
  align-items: center;
  column-gap: 1rem;
  padding: 0.25rem 0.5rem;
}
body .filterLayout svg {
  width: 2.28125rem;
  height: 2.28125rem;
  margin-bottom: -0.35rem;
}
body .filterLayout .importance * {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  transition: outline 0.3s;
}
body .filterLayout .importance *.high {
  background-color: rgb(175, 61, 61);
}
body .filterLayout .importance *.medium {
  background-color: rgb(192, 190, 111);
}
body .filterLayout .importance *.low {
  background-color: rgb(139, 163, 112);
}
body .filterLayout .importance *:hover {
  outline: 1px solid white;
  outline-offset: 2px;
  cursor: pointer;
}
body .filterLayout .importance input:checked + label {
  outline: 1px solid white;
  outline-offset: 2px;
}
body .filterLayout .access {
  padding-top: 0;
  padding-bottom: 0;
}
body .profileOptions {
  position: absolute;
  top: 3.5rem;
  right: 0;
  display: flex;
  width: 10vw;
  height: 10vh;
  background-color: red;
}/*# sourceMappingURL=styles.css.map */